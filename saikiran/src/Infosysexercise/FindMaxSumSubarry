package com.practice.test;
import java.util.Arrays;
public class FindMaxSumSubArray {

	public static void main(String[] args) {	
		int[] arr= {1,-2,3,4,-5,2,-1,6,-2};
		
		System.out.println(maxSubarraySum(arr));
//		System.out.println(findMaxSum(arr));
	}
	public static int maxSubarraySum(int[] nums) {
        int maxSum = Integer.MIN_VALUE;
        int currentSum = 0;

        for (int num : nums) {
            currentSum = Math.max(num, currentSum + num);
            maxSum = Math.max(maxSum, currentSum);
        }

        return maxSum;
    }
//	below method will return list of subarray elements in the given array
	
	public static int[] maxSubarray_nums(int[] nums) {
        int maxSum = Integer.MIN_VALUE;
        int currentSum = 0;
        int start = 0;
        int end = 0;
        int tempStart = 0;

        for (int i = 0; i < nums.length; i++) {
            currentSum += nums[i];
            if (nums[i] > currentSum) {
                currentSum = nums[i];
                tempStart = i;
            }

            if (currentSum > maxSum) {
                maxSum = currentSum;
                start = tempStart;
                end = i;
            }
        }

        // Return the maximum subarray
        int[] result = new int[end - start + 1];
        for (int i = 0; i < result.length; i++) {
            result[i] = nums[start + i];
        }

        return result;
    }

}

/*
Given an integer array num[], find the subarray with the largest sum and return its sum.
Example and explanation:
It's important to note that the subarray must always be in consecutive order. So for example, if the original array is {3,-1,2,5,-4}, some possible subarrays are {3},{3,-1,2},{-1,2,5},{2,5,-4}, etc.
Now, in our scenario, we need to find the subarray whose numbers, when added, give us the largest sum. And finally print the sum value as an output.

Exmple 1:
Input: num[]={-2,1,-3,4,-1,2,1,-5,4}
output: 6
Explanaiton: Out of all the subarrays in the above given array num[] the subarray {4,-1,2,1} has the largest sum 6 which must be printed as an output.

Example 2:
Input: num[]={1}
output:1
Explanaiton: as in the given array a single element is present then, only one sub-array can be created out of the input array which is {1}, which is the largest sum. So, 1 must be printed 
as an output.

Example 3:
Input: num[] ={5,4,-1,7,8}
Output: 23
Explanaiton: Out of all the subarrays in the above given array num[] the subarray {5,4,-1,7,8} has the largest sum 23 which must be printed as an output
*/
